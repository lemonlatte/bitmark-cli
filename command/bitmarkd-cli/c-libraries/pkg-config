#!/bin/sh
# pkg-config wrapper to deal with local libs and arrange static linking

# error handler
ERROR()
{
  printf 'error: '
  printf "$@"
  printf '\n'
  exit 1
}

MUST_CD()
{
  cd "$1" || ERROR 'cannot cd to: %s' "$1"
}

# determine the directory of this script as an absolute path
this_dir=$(dirname "$0")
MUST_CD "${this_dir}"
this_dir=$(pwd)

# initailise variables
libucl=no
libargon2=no
pkg_path=
pkg_config=

# determine real pkg-config
OLD_IFS="${IFS}"
IFS=':'
for dir in ${PATH}
do
  [ X"${dir}" = X"${this_dir}" ] && continue
  [ -d "${dir}" ] || continue

  # resolve any symlink
  MUST_CD "${dir}"
  pkg_config="$(pwd)/pkg-config"

  [ X"$0" = X"${pkg_config}" ] && continue
  [ -x "${pkg_config}" ] && break
  pkg_config=
done
IFS="${OLD_IFS}"
[ -z "${pkg_config}" ] && ERROR 'could determine path to pkg-config, suggest: apt install pkgconf'

# restore cd
MUST_CD "${this_dir}"


# generate a pkg-config .pc file for static linking
pc_file()
{
  local pkg dir
  pkg="$1"; shift
  dir="$1"; shift

  if [ -z "${pkg_path}" ]
  then
    pkg_path="${dir}/pkgconf"
    mkdir -p "${pkg_path}"
  fi
  cat > "${pkg_path}/${pkg}.pc" <<EOF
Name: ${pkg}
Description: Development libraries for ${pkg}
Libs: -L${dir}/${pkg} ${dir}/${pkg}/${pkg}.a
Cflags: -I${dir}/${pkg}/include
EOF
}

# check for local libraries
for arg in "$@"
do
  case "${arg}" in
    (-*)
      ;;
    (*)
      ${pkg_config} "${arg}" || pc_file "${arg}" "${this_dir}"
      ;;
  esac
done

if [ -n "${pkg_path}" ]
then
  export PKG_CONFIG_PATH="${pkg_path}"
fi

# run the real pkg-config
exec "${pkg_config}" "$@"
